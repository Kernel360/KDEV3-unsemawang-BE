plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.palbang'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    awsSdkVersion = '2.27.21'
    queryDslVersion = '5.1.0'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Data
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

    // AWS
    implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.2.1'
    implementation platform("software.amazon.awssdk:bom:${awsSdkVersion}")
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:apache-client'
    implementation 'software.amazon.awssdk:sso'
    implementation 'software.amazon.awssdk:ssooidc'

    // Swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

    // json
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    //QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // DB
    implementation 'com.mysql:mysql-connector-j:9.1.0'
    runtimeOnly 'com.h2database:h2'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    //OAuth2.0
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Apache 5.2
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2'
    implementation 'org.apache.httpcomponents.core5:httpcore5:5.2'

    implementation 'com.github.usingsky:KoreanLunarCalendar:0.3.1'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation 'com.github.kstyrc:embedded-redis:0.6'


    // Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
}

tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated')
}