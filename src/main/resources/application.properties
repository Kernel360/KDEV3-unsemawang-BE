spring.application.name=unsemawang
server.port=8080
spring.config.import=optional:file:.env[.properties]
# DataSource Settings
# Domain DB Setting
spring.datasource-domain.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
spring.datasource-domain.jdbcUrl=${SPRING_DATASOURCE_URL}
spring.datasource-domain.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource-domain.password=${SPRING_DATASOURCE_PASSWORD}
# Meta batch DB Setting
spring.datasource-meta.driver-class-name=${SPRING_DATASOURCE_META_DRIVER_CLASS_NAME}
spring.datasource-meta.jdbcUrl=${SPRING_DATASOURCE_META_URL}
spring.datasource-meta.username=${SPRING_DATASOURCE_META_USERNAME}
spring.datasource-meta.password=${SPRING_DATASOURCE_META_PASSWORD}
# Meta table create
spring.batch.jdbc.initialize-schema=always
spring.batch.data-source=metaDataSource
spring.batch.jdbc.schema=classpath:org/springframework/batch/core/schema-mysql.sql
# Spring Batch Job enable: The server doesn't start executing.
spring.batch.job.enabled=false
# JPA Settings
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
spring.jpa.generate-ddl=${SPRING_JPA_GENERATE_DDL}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM}
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${YOUR_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${YOUR_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${YOUR_GOOGLE_REDIRECT_URL}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email
# Swagger
springdoc.api-docs.path=/api-docs
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.groups-order=asc
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.display-request-duration=true
# External Api
external.api.tojeong.url=${EXTERNAL_API_TOJEONG_URL}
external.api.sinsu.url=${EXTERNAL_API_SINSU_URL}
external.api.insaeng.url=${EXTERNAL_API_INSAENG_URL}
external.api.sajuunse.url=${EXTERNAL_API_SAJUUNSE_URL}
external.api.todayunse.url=${EXTERNAL_API_TODAYUNSE_URL}
external.api.gunghap.url=${EXTERNAL_API_GUNGHAP_URL}
external.api.unsepuri.url=${EXTERNAL_API_UNSEPURI_URL}
#JWT secretKey
spring.jwt.secret=${SPRING_JWT_SECRET}
#logging
logging.level.com.palbang.unsemawang.oauth2=DEBUG
logging.level.com.palbang.unsemawang.jwt=DEBUG
logging.level.org.springframework.security=DEBUG
# AWS
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}
cloud.aws.region.static=${AWS_REGION}
cloud.aws.s3.bucket=${S3_BUCKET_NAME}
# MultipartFile
spring.servlet.multipart.max-file-size=3MB
spring.servlet.multipart.max-request-size=15MB
# HTTP form request size
server.tomcat.max-http-form-post-size=15MB
# Redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.connect-timeout=3000
# RabbitMQ
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.username=${RABBITMQ_USERNAME}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
# RabbitMQ Listner config
spring.rabbitmq.listener.simple.auto-startup=true
spring.rabbitmq.listener.simple.default-requeue-rejected=false
# RabbitMQ template congif
spring.rabbitmq.template.exchange=chat.exchange
spring.rabbitmq.template.routing-key=chat.routing.key
# RabbitMQ publisher config
spring.rabbitmq.publisher-confirm-type=correlated
spring.rabbitmq.publisher-returns=true
# HikariCP? ?? ??? ??? MySQL? max_connections ?? ??? ??
spring.datasource.hikari.maximum-pool-size=50
# ?? ?? ???? ?? ??? ??
spring.datasource.hikari.idle-timeout=30000

